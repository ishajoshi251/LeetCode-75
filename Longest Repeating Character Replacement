class Solution:
    def characterReplacement(self, s: str, k: int) -> int:
        l = 0
        d = {}
        llen = 0
        for i in range(len(s)):
            
            if s[i] in d:
                d[s[i]] += 1
            else:
                d[s[i]] = 1
            
            # Replacements cost = cells count between left and right - highest frequency
            cells = i - l + 1
            if cells - max(d.values()) <= k:
                llen = max(llen, cells)
                
            else:
                d[s[l]] -= 1
                if not d[s[l]]:
                    d.pop(s[l])
                l += 1
        
        return llen
